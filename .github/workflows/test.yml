name: Test

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run test script
        run: |
          python test.py
          echo "Without list" >> results.txt
          python -m timeit -s 's="a" * 10**6' '" ".join(s)' >> results.txt
          echo "With list" >> results.txt
          python -m timeit -s 's="a" * 10**6' '" ".join(list(s))' >> results.txt
          mv results.txt ${{ matrix.python-version }}-results.txt
          git config user.name  github-action
          git config user.email github-actions@github.com
          git config pull.rebase false
          git add ${{ matrix.python-version }}-results.txt
          git commit -m "chore: results." || exit 0
          # exponential backoff for race condn
          for attempt in $(seq 10); do
              echo "uploading attempt $attempt"
              git pull
              git push && break
              sleep $(echo "$RANDOM / 10000" | bc -l)
          done

  update-readme:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - run: |
          git config user.name  github-action
          git config user.email github-actions@github.com
          git pull
          mv readme.md readme.md.bak
          awk '/## Results/{i++} !i; i==1 {exit}' readme.md.bak > readme.md
          echo -e  "## Results" >> readme.md
          echo '```' >> readme.md
          for fn in *-results.txt; do
              echo $fn >> readme.md
              cat $fn >> readme.md
              echo -e "\n" >> readme.md
          done
          echo '```' >> readme.md
          git add readme.md
          git commit -m "chore: results aggregate." || exit 0
          git push

          


